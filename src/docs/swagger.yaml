# src/docs/swagger.yaml
openapi: 3.0.0
info:
  title: VaultX API
  version: "1.0.0"
  description: VaultX is a secure, developer-friendly backend service for storing, managing, and retrieving API keys, secrets. Built with Node.js, Express, and MongoDB, VaultX ensures safety and easy access to your sensitive data.
  contact:
    name: VaultX Support
    email: brijeshsoftdev@duck.com

servers:
  - url: http://localhost:3000

paths:
  /api/auth/register:
    post:
      summary: User registration
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: Registration successful
        400:
          description: Bad request
        409:
          description: User already exists

  /api/auth/login:
    post:
      summary: User login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
        400:
          description: Bad request
        401:
          description: Unauthorized

  /api/auth/me:
    get:
      summary: Get user information
      tags:
        - Auth
      responses:
        200:
          description: User information
        401:
          description: Unauthorized

  /api/auth/logout:
    get:
      summary: User logout
      tags:
        - Auth
      responses:
        200:
          description: Logout successful
        401:
          description: Unauthorized

  /api/vaults:
    post:
      summary: Create a new vault
      tags:
        - Vaults
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                description:
                  type: string
      responses:
        201:
          description: Vault created successfully
        400:
          description: Bad request
        401:
          description: Unauthorized

    get:
      summary: List all vaults
      tags:
        - Vaults
      responses:
        200:
          description: List of vaults
        401:
          description: Unauthorized

  /api/vaults/{vaultId}:
    get:
      summary: Get a specific vault
      tags:
        - Vaults
      parameters:
        - name: vaultId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Vault details
        404:
          description: Vault not found
        401:
          description: Unauthorized

    put:
      summary: Update a vault
      tags:
        - Vaults
      parameters:
        - name: vaultId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                description:
                  type: string
      responses:
        200:
          description: Vault updated successfully
        400:
          description: Bad request
        404:
          description: Vault not found
        401:
          description: Unauthorized

    delete:
      summary: Delete a vault
      tags:
        - Vaults
      parameters:
        - name: vaultId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Vault deleted successfully
        404:
          description: Vault not found
        401:
          description: Unauthorized

  /api/vaults/{vaultId}/secrets:
    post:
      summary: Add a secret to a vault
      tags:
        - Vaults
      parameters:
        - name: vaultId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                key:
                  type: string
                value:
                  type: string
      responses:
        201:
          description: Secret added successfully
        400:
          description: Bad request
        404:
          description: Vault not found
        401:
          description: Unauthorized
  
    get:
      summary: List all secrets in a vault
      tags:
        - Vaults
      parameters:
        - name: vaultId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: List of secrets
        404:
          description: Vault not found
        401:
          description: Unauthorized

  /api/secrets:
    get:
      summary: List all secrets
      tags:
        - Secrets
      responses:
        200:
          description: List of secrets
        401:
          description: Unauthorized

  /api/secrets/{secretId}:
    get:
      summary: Get a specific secret
      tags:
        - Secrets
      parameters:
        - name: secretId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Secret details
        404:
          description: Secret not found
        401:
          description: Unauthorized

    put:
      summary: Update a secret
      tags:
        - Secrets
      parameters:
        - name: secretId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                key:
                  type: string
                value:
                  type: string
      responses:
        200:
          description: Secret updated successfully
        400:
          description: Bad request
        404:
          description: Secret not found
        401:
          description: Unauthorized

    delete:
      summary: Delete a secret
      tags:
        - Secrets
      parameters:
        - name: secretId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Secret deleted successfully
        404:
          description: Secret not found
        401:
          description: Unauthorized

